{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","utils/format.js","components/Balance.js","components/Header.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","App.js","index.js"],"names":["state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","fetch","res","json","data","response","id","method","body","JSON","stringify","headers","Provider","value","getTransactions","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","className","htmlFor","onChange","target","placeholder","numberWithCommas","x","toString","replace","Balance","total","map","reduce","acc","item","toFixed","Header","IncomeExpenses","amounts","income","expense","Transaction","sign","Math","abs","onClick","TransactionList","useEffect","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35b07d73.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"GET_TRANSACTIONS\":\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload\n      };\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          transaction => transaction._id !== action.payload\n        )\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload]\n      };\n    case \"TRANSACTION_ERROR\":\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// Initial state\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  async function getTransactions() {\n    try {\n      const res = await fetch(\"/api/v1/transactions\");\n      const data = await res.json();\n\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await fetch(`/api/v1/transactions/${id}`, {\n        method: \"DELETE\"\n      });\n\n      dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    try {\n      const res = await fetch(\"/api/v1/transactions\", {\n        method: \"POST\",\n        body: JSON.stringify(transaction),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      const data = await res.json();\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const newTransaction = {\n      text,\n      amount: +amount\n    };\n\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={e => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n","export function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from \"../utils/format\";\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1>${numberWithCommas(total)}</h1>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const Header = () => {\n  return <h2>Expense Tracker</h2>;\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from \"../utils/format\";\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">${numberWithCommas(income)}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">${numberWithCommas(expense)}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from \"../utils/format\";\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n  return (\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n      {transaction.text}{\" \"}\n      <span>\n        {sign}${numberWithCommas(Math.abs(transaction.amount))}\n      </span>\n      <button\n        onClick={() => deleteTransaction(transaction._id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\n\nexport const TransactionList = () => {\n  const { transactions, getTransactions } = useContext(GlobalContext);\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map(transaction => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { AddTransaction } from \"./components/AddTransaction\";\nimport { Balance } from \"./components/Balance\";\nimport { Header } from \"./components/Header\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}